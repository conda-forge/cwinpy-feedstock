{% set name = "cwinpy" %}
{% set version = "1.4.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: d5a48f6764dfe2de51d74199ab12c9515c7188a67e386e331d49271dc24c54e8
  patches:
    # to update the patches for a new release:
    #
    #     # -- checkout the new source release tag
    #     cd /path/to/git/pycbc
    #     git fetch
    #     git checkout <release-tag>
    #     # -- apply the patches on top of the release tag
    #     git am --3way /path/to/git/pycbc-feedstock/recipe/patches/*.patch
    #     <resolve-any-conflicts>
    #     # -- render new patch files
    #     git format-patch <release-tag>
    #     # -- copy them back to the feedstock
    #     cd /path/to/git/pycbc-feedstock
    #     git rm recipe/patches/*.patch
    #     cp /path/to/git/pycbc/*.patch recipe/patches/
    #     git add recipe/patches/*.patch
    #     <update-this-file-as-required>

    # remove lalsuite requirement
    - patches/0001-Remove-lalsuite-Python-requirement.patch
    # patch test to survive no internet connection
    - patches/0002-Handle-no-internet-connection-in-test.patch

build:
  entry_points:
    - cwinpy_pe = cwinpy.pe.pe:pe_cli
    - cwinpy_pe_pipeline = cwinpy.pe.pe:pe_pipeline_cli
    - cwinpy_pe_generate_pp_plots = cwinpy.pe.testing:generate_pp_plots
  number: 0
  script: {{ PYTHON }} -m pip install . -vv
  # requirements aren't available for Windows
  skip: true  # [win]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ stdlib("c") }}
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython >=3                             # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
  host:
    - cython >=3
    - numpy
    - pip
    - python
    - setuptools >=61
    - setuptools_scm >=6.2
  run:
    - appdirs
    - arby
    - astropy-base
    - bilby >=2.0.1
    - configargparse
    - corner >=2.2.1
    - gwosc >=0.5.4
    - gwpy >=2.1.1
    - healpy
    - lintegrate >=0.1.7
    - matplotlib-base >=3.6.0
    - numba >=0.5.0
    - numpy >=1.17.0
    - pesummary >=1.2.0
    - psrqpy >=1.1.7
    - python
    - python-htcondor >=10.0.0
    - python-lal >=7.2.2
    - python-lalframe >=2.0.3
    - python-lalpulsar >=5.0.2
    - requests
    - scipy
    - simpleeval
    - solar_system_ephemerides >=1.0.0

test:
  requires:
    - {{ compiler("c") }}
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - python  # [build_platform != target_platform]
    - cross-python_{{ target_platform }}  # [build_platform != target_platform]
    - numpy  # [build_platform != target_platform]
    - astropy-base >=4.1
    - ephem >=3.7.7.1
    - pyerfa
    - arby
    - cweqgen >=0.4.4
    - cython >=3  # [build_platform != target_platform]
    - git
    - healpy
    - httpretty
    #- libstempo >=2.4.2  # [not arm64]
    - lalapps
    - pesummary >=1.3.2
    - pip
    - pytest >=4.6
    - pytest-astropy
    - pytest-socket
    - seaborn
    #- tempo2  # just let libstempo install tempo2
  commands:
    - pip install git+https://github.com/mattpitkin/libstempo.git@utf8-investigation
    - conda install -c conda-forge tempo2"=2025.02.1"
    # check requirements
    - python -m pip check  # [not arm64]
    # run unit tests
    #- python -m pytest --pyargs cwinpy.test -ra  # [build_platform == target_platform]
    - python -m pytest --pyargs cwinpy.test.test_signal -sra  # [build_platform == target_platform]
    # check entry points
    - cwinpy_pe --help
    - cwinpy_pe_pipeline --help
    - cwinpy_pe_generate_pp_plots --help

about:
  home: https://github.com/cwinpy/cwinpy/
  doc_url: https://cwinpy.readthedocs.io/
  dev_url: https://git.ligo.org/cwinpy/cwinpy
  license: MIT
  license_file: LICENSE
  summary: CW Inference in Python
  description: |
    A Python module for performing Bayesian inference for
    continuous gravitational-wave signals from pulsars.

extra:
  recipe-maintainers:
    - mattpitkin
    - duncanmmacleod
